/* Grid's variables */

$cols: 12;
$gutter: 20px;
$l-device: 1200px;
$m-device: 760px;
$s-device: $m-device;
$ts-device: 470px;

/* Box-sizing */

*,
*::after,
*::before {
  box-sizing: border-box;
}

/* Media querie's mixin */

@mixin device($size) {
  @if ($size == large) {
    @media screen and (min-width: #{$l-device}) {
      @content;
    }
  } @else if ($size == medium) {
    @media screen and (min-width: #{$m-device}) and (max-width: #{$l-device - 1}) {
      @content;
    }
  } @else if ($size == small) {
    @media screen and (max-width: #{$m-device - 1}) {
      @content;
    }
  } @else if ($size == toosmall) {
    @media screen and (max-width: #{$ts-device - 1}) {
      @content;
    }
  }
}

@function grid($col, $offset: false) {
  $width: ($col / $cols * 100) + '%';
  $result: calc(#{$width} - #{$gutter});

  @if ($offset == offset) {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter});
  }

  @return $result;
}

.row {
  display: flex;
  flex-wrap: wrap;
  @include device(small) {
    flex-direction: column;
  }
}

.row-child {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  margin-left: -$gutter / 2;
  margin-right: -$gutter / 2;
  @include device(small) {
    margin-left: 0;
    margin-right: 0;
  }
}

@for $i from 1 through $cols {
  .grid-#{$i} {
    flex: 0 0 grid($i);
  }
}

@mixin grid-structure {
  min-height: 1px;
  margin-left: ($gutter / 2);
  margin-right: ($gutter / 2);
  @include device(small) {
    flex: 1;
    margin-left: 0;
    margin-right: 0;
  }
}

[class^='grid-'] {
  @include grid-structure;
}

@for $i from 1 through $cols {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset;
  }
}

@include device(small) {
  %offset {
    margin-left: 0;
  }
}

@mixin container {
  max-width: $l-device;
  margin: 0 auto;
  position: relative;
  @include device(medium) {
    max-width: $m-device;
  }
  @include device(small) {
    max-width: $s-device;
    padding-left: 10px;
    padding-right: 10px;
  }
}

.container {
  @include container;
}
